{"version":3,"sources":["components/form-section/form.js","components/ContactList/Contactlist.js","components/FilterList/FilterList.js","components/phonebook.js","App.js","index.js"],"names":["initialState","number","name","Form","state","handleChange","event","target","value","setState","handleSubmit","preventDefault","props","addContact","onSubmit","this","className","style","nameTitle","type","numberTitle","htmlFor","button","Component","defaultProps","ContactList","contact","onDelete","map","id","onClick","FilterList","filter","onFilterHandleChange","label","onChange","PhoneBook","contacts","some","item","toLowerCase","alert","prevState","nanoid","deleteContact","contactId","includes","parsedContacts","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","visibleContacts","getFilteredContacts","React","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a65cb209.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nimport style from './FormStyle.module.css';\r\n// import { nanoid } from 'nanoid';\r\nimport PropTypes from \"prop-types\";\r\n// import { initialState } from \"./initialState\";\r\n\r\n\r\n\r\nconst initialState = {\r\n  number: \"\",\r\n  name:\"\",\r\n}\r\nclass Form extends Component {\r\nstate = {...initialState}\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.addContact(this.state);\r\n    this.setState({...initialState});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <p className={style.nameTitle}>Name</p>\r\n        <label>\r\n          <input\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <p className={style.numberTitle}>Number</p>\r\n        <label htmlFor=\"\">\r\n          <input\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <div>\r\n          <button type=\"submit\" className={style.button}>Add contact</button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nForm.defaultProps = {\r\n  addContact:()=>{},\r\n}\r\n\r\nForm.propTypes = {\r\n  addContact: PropTypes.func,\r\n}\r\n\r\nexport default Form;\r\n","import style from './ContactList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function ContactList({contact, onDelete}) { \r\n    return (\r\n        <ul>\r\n            {contact.map(({id, name, number}) => (\r\n                <li key = {id}>\r\n                    <p className={style.name}>{name}</p>\r\n                    <p>{number}</p>\r\n                    <button type='buttton' onClick={() =>  onDelete(id)}>Delete v jopu</button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nContactList.propTypes = {\r\n    contact: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.idRequired,\r\n            number: PropTypes.string.isRequired\r\n        })\r\n    ),\r\n    onDelete: PropTypes.func.isRequired\r\n}\r\n","import style from './FilterList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default function FilterList ({filter, onFilterHandleChange}) {\r\n    const onHandleChange = event => {\r\n        onFilterHandleChange(event.target.value)\r\n    }\r\n    return (\r\n        <label className={style.label}>\r\n         Find contact by name\r\n         <input type=\"text\" value={filter} name=\"filter\" onChange={onHandleChange}/>\r\n        </label>\r\n    )\r\n}\r\n\r\n\r\nFilterList.propTypes = {\r\n    filter: PropTypes.string.isRequired,\r\n    onFilterHandleChange: PropTypes.func.isRequired\r\n}\r\n","// import style from \"./Phonebook.module.css\";\r\nimport React from \"react\";\r\nimport Form from \"./form-section/form\";\r\nimport { nanoid } from 'nanoid';\r\nimport ContactList from './ContactList/Contactlist';\r\nimport FilterList from './FilterList/FilterList';\r\n\r\nclass PhoneBook extends React.Component {\r\n    state = {\r\n        contacts: [\r\n        ],\r\n        filter: ''\r\n      }\r\n\r\n      getFilteredContacts() {\r\n        return this.state.contacts.filter(contact => \r\n          contact.name.toLowerCase().includes(this.state.filter.toLowerCase()),\r\n          )\r\n      }\r\n\r\n\r\n      addContact = contact => {\r\n        if (this.state.contacts.some(item => item.name.toLowerCase() === contact.name.toLowerCase(),)){\r\n          alert('go to dupa')\r\n          return;\r\n        }\r\n        this.setState(prevState =>({\r\n          contacts: [...prevState.contacts, {...contact, id: nanoid()}]\r\n        }))\r\n      }\r\n      \r\n\r\n      deleteContact = contactId => {\r\n        this.setState(prevState => ({contacts: prevState.contacts.filter(\r\n          contact =>  contact.id !== contactId) }))\r\n      }\r\n\r\n      onFilterHandleChange = filter => {\r\n        this.setState({filter})\r\n      }\r\n\r\n      componentDidMount() {\r\n        const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\r\n       \r\n        if(parsedContacts){\r\n        this.setState({contacts: parsedContacts});\r\n        }\r\n       }\r\n       \r\n       \r\n             componentDidUpdate (prevState, prevProps) {\r\n             \r\n               if (prevState !== this.state.contacts) {\r\n                 localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\r\n               }\r\n             }\r\n       \r\n       \r\n\r\n  render() {\r\n    const {filter} = this.state;\r\n    const visibleContacts = this.getFilteredContacts();\r\n    // console.log(visibleContacts)\r\n    return (\r\n      <div>\r\n        <h2>Phonebook</h2>\r\n        <Form addContact={this.addContact}/>\r\n        <h2>Contacts</h2>\r\n        <FilterList filter={filter} onFilterHandleChange={this.onFilterHandleChange}/>\r\n        <ContactList contact={visibleContacts} onDelete={this.deleteContact}/>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default PhoneBook;\r\n","import './App.css';\nimport './styles/reset.css'\nimport React from 'react';\nimport PhoneBook from './components/phonebook';\n// import { nanoid } from 'nanoid'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PhoneBook/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import { nanoid } from 'nanoid'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}